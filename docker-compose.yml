version: '3.4'

services:
  movieapi:
    image: movieapi
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000


  postgres:
    image: postgres:10.5
    container_name: postgres
    hostname: postgres
    restart: always
    ports:
      - 5432:5432
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables and fill data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped

  prisma-postgres-api:
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prisma-postgres-api
    depends_on:
      - postgres
    ports:
      - "3100:3100"
    restart: always

volumes:
  postgres-data:
  pgadmin-data: